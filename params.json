{"name":"OpenJSLog","tagline":"OpenJSLog is a sophisticated Logging utility with Timestamping and Log-Analysis.","body":"# OpenJSLog\r\n\r\nOpenJSLog is a sophisticated Logging utility with Timestamping and Log-Analysis.\r\n\r\nIt is based on JSON-Explorer by kadjar: https://github.com/kadjar/json-explorer\r\n\r\n__Now with Node.JS support & MIT Licensed!__\r\n\r\n## Usage\r\n\r\n - Node.JS:\r\n\r\n  A simple `npm install openjslog` within you commandline (or adding a dependency to `openjslog` in your `package.json` followeg by a simple `npm install`) and a `var Log = require('openjslog');` in your application suffices to be able to use `Log(myAwesomeVariable);`\r\n\r\n  Available methods: *(`Log` will be the name of your variable!)*\r\n   - `Log(log, force, spit, emptyAfterSpit)`\r\n   - `Log.Group(groupName, collapsed)`\r\n   - `Log.GroupEnd()`\r\n   - `Log.toString()`\r\n\r\n\r\n - Browser:\r\n\r\n   Simply include the file somewhere in your html and use one of the following available methods:\r\n   - `Log(log, force, spit, emptyAfterSpit)`\r\n   - `Log.group(groupName, collapsed)`\r\n   - `Log.groupEnd()`\r\n   - `Log.toString()`\r\n   - `Log.setDevmode(value)`\r\n\r\n## Code-docs:\r\n\r\n`Log(log, force, spit, emptyAfterSpit)`:\r\n\r\n``` text\r\nLog: Logs the given input with a timestamp\r\n\r\n  @param log               The Object to log.\r\n  @param force             Whether or not to force a log to console.\r\n  @param spit              Output the Logbuffer to the Console\r\n  @param emptyAfterSpit    Wether or not to empty the Logbuffer after outputting it.\r\n```\r\n\r\n`Log.setDevmode(value)`: (**Unavailable in Node.JS**, legacy available via `OJSLsetDevmode(...)`)\r\n\r\n``` text\r\nLog.setDevmode: Sets the devmode to either true or false\r\n\r\n  @param value            true or false\r\n```\r\n\r\n`Log.group(groupName, collapsed)`: (legacy available via `OJSLGroup(...)`)\r\n\r\n``` text\r\nLog.group: Marks the beginning of a group of logs\r\n\r\n  @param groupName       The name of the group\r\n  @param collapsed       Collapse the Group?\r\n```\r\n\r\n`Log.groupEnd()`: (legacy available via `OJSLGroupEnd()`)\r\n\r\n``` text\r\nLog.group: Marks the end of a group of logs\r\n```\r\n\r\n`Log.toString()`:\r\n\r\n``` text\r\nLog.toString: Return the contents of the LogBuffer as JSON\r\n\r\n  @returns string        Contents of the LogBuffer as JSON\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}